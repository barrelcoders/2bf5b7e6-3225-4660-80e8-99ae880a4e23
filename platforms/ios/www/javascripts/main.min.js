/*! table99 Ankit Sharma14-02-2017 */
"use strict";angular.module("table99",["ngStorage","table99.config","table99.controllers","table99.services","table99.directives","ui.router","ui.bootstrap","ngFacebook","slickCarousel","ngFileUpload","ngMaterial","angular-loading-bar"]).config(["$stateProvider","$urlRouterProvider","$locationProvider","$facebookProvider","$mdDialogProvider",function($stateProvider,$urlRouterProvider,$locationProvider,$facebookProvider,$mdDialogProvider){$mdDialogProvider.addPreset("updateDisplayName",{options:function(){return{templateUrl:"../templates/nameDialog.html",controller:"nameDialogCtrl"}}}),$mdDialogProvider.addPreset("updateAvatar",{options:function(){return{templateUrl:"../templates/avatarDialog.html",controller:"avatarDialogCtrl"}}}),$mdDialogProvider.addPreset("updateBackground",{options:function(){return{templateUrl:"../templates/backgroundDialog.html",controller:"backgroundDialogCtrl"}}}),$mdDialogProvider.addPreset("shop",{options:function(){return{templateUrl:"../templates/shopDialog.html",controller:"shopDialogCtrl"}}}),$mdDialogProvider.addPreset("share",{options:function(){return{templateUrl:"../templates/shareDialog.html",controller:"shareCtrl"}}}),$urlRouterProvider.otherwise("/home"),$stateProvider.state("home",{url:"/home",templateUrl:"../templates/home.html",controller:"homeCtrl"}).state("signin",{url:"/signin",templateUrl:"../templates/signin.html",controller:"signInCtrl"}).state("signup",{url:"/signup",templateUrl:"../templates/signup.html",controller:"signUpCtrl"}).state("tables",{url:"/tables",templateUrl:"../templates/tables.html",controller:"tablesCtrl"}).state("play",{url:"/play/:id",templateUrl:"../templates/play.html",controller:"playCtrl"}).state("shop",{url:"/shop",templateUrl:"../templates/shopDialog.html",controller:"shopDialogCtrl"}).state("createTable",{url:"/createTable",templateUrl:"../templates/createTable.html",controller:"createTableCtrl"}).state("userPlay",{url:"/userPlay/:id/:ref",templateUrl:"../templates/userPlay.html",controller:"userPlayCtrl"}),$facebookProvider.setAppId("819967424810603")}]).run(function($rootScope,$localStorage){$localStorage&&($localStorage.LOADING=!1),function(d){var js,id="facebook-jssdk",ref=d.getElementsByTagName("script")[0];d.getElementById(id)||(js=d.createElement("script"),js.id=id,js.async=!0,js.src="//connect.facebook.net/en_US/all.js",ref.parentNode.insertBefore(js,ref))}(document)}),angular.module("table99.config",[]).constant("BASE_URL","http://ec2-54-255-190-240.ap-southeast-1.compute.amazonaws.com:3000/"),angular.module("table99.controllers",[]),angular.module("table99.directives",[]),angular.module("table99.services",[]),angular.module("table99.directives").directive("tableDealer",[function(){return{scope:{dealer:"="},templateUrl:"table.dealer.html",link:function(scope,element,attrs){}}}]),angular.module("table99.directives").directive("playingCardsSet",[function(){return{scope:{player:"=",cardSet:"=",slot:"=",seeMyCards:"&seeMyCards"},templateUrl:"playing.card.set.html",link:function(scope,element,attrs){var lmargin=attrs.lmargin||30;lmargin*=1,scope.getCardStyle=function($index,data){var idx=$index+1;return{left:-20+idx*lmargin+2*idx,transform:" rotate("+(-43+1*idx*25-5*idx)+"deg)"}}}}}]),angular.module("table99.directives").directive("playingCard",[function(){return{scope:{card:"="},templateUrl:"playing.card.html",link:function(scope,element,attrs){}}}]),angular.module("table99.directives").directive("sidePlayer",["$filter","soundService","$mdDialog","$timeout",function($filter,soundService,$mdDialog,$timeout){return{scope:{table:"=",player:"="},templateUrl:"side.player.html",link:function(scope,element,attrs){function doAnimation(args,reverse){var animateDiv=$('<div  class="animate-bet alert alert-warning"><i class="fa fa-rupee"></i> '+$filter("number")(args.amount)+"</div>").appendTo("body"),animateTo=$(".table-bet").offset(),animateFrom=$(element).find(".side-player-outer").offset();if(animateFrom.top+=20,animateFrom.left+=10,animateTo.left+=10,animateTo.top+=10,reverse){var temp=animateFrom;animateFrom=animateTo,animateTo=temp}animateDiv.css(animateFrom),animateDiv.fadeIn(function(){animateDiv.animate(animateTo,args.timeout||1e3,function(){animateDiv.fadeOut(function(){animateDiv.remove(),args.callback&&"function"==typeof args.callback&&args.callback()})})})}function doGiftAnimation(args){var animateDiv=$("<div style='height: 50px;width: 50px;background-size: contain;background-repeat:no-repeat;background-position:center;position: absolute;z-index: 99;"+args.image+"' ></div>").appendTo("body"),animateFrom=args.from,animateTo=args.to;animateFrom.top+=90,animateFrom.left+=90,animateTo.left+=90,animateTo.top+=90,animateDiv.css(animateFrom),animateDiv.fadeIn(function(){animateDiv.animate(animateTo,1e3,function(){$timeout(function(){animateDiv.remove()},5e3)})})}var performBetAnimation=scope.$on("performBetAnimation",function(evt,args){scope.player&&scope.player.turn&&doAnimation({amount:args.bet,timeout:args.timeout})}),performWinnerAnimation=scope.$on("performWinnerAnimation",function(evt,args){scope.player&&scope.player.winner&&(soundService.loser(),doAnimation({amount:args.bet,timeout:args.timeout,callback:args.callback},!0))}),performBootAnimation=scope.$on("performBootAnimation",function(evt,args){scope.player&&scope.player.active&&doAnimation({amount:args.boot,timeout:args.timeout})}),performGiftAnimation=scope.$on("performGiftAnimation",function(evt,args){var from=$("input[value="+args.from+"]").offset(),to=$("input[value="+args.to+"]").offset();doGiftAnimation({from:from,to:to,image:args.image})}),updatePlayerSuccess=scope.$on("updatePlayerSuccess",function(evt,args){scope.player&&scope.player.active&&scope.player.playerInfo.id==args.playerId&&(scope.player.playerInfo[args.field]=args.value,scope.$apply())});scope.share=function(event){scope.player&&scope.player.active&&$mdDialog.show($mdDialog.share({scope:scope,preserveScope:!0,parent:angular.element(document.body),targetEvent:event,locals:{SOURCE:angular.element(document.body).find(".current-player-id").val(),DESTINATION:$(element).find(".side-player-id").val(),USER:scope.$parent.currentPlayer.playerInfo,TABLE_ID:scope.$parent.tableId}}))},scope.$on("$destroy",function(){performBetAnimation(),performWinnerAnimation(),performBootAnimation(),performGiftAnimation(),updatePlayerSuccess()})}}}]),angular.module("table99.directives").directive("mainPlayer",["$filter","soundService","$timeout",function($filter,soundService,$timeout){var BLIND_ALLOWED=4;return{scope:{player:"=",table:"=",seeMyCards:"&seeMyCards",placeBet:"&placeBet",placePack:"&placePack",placeSideShow:"&placeSideShow",respondSideShow:"&respondSideShow"},templateUrl:"main.player.html",link:function(scope,element,attrs){function doAnimation(args,reverse){var animateDiv=$('<div class="animate-bet alert alert-warning"><i class="fa fa-rupee"></i> '+$filter("number")(args.amount)+"</div>").appendTo("body"),animateTo=$(".table-bet").offset(),animateFrom=$(element).find(".current-player-outer").offset();if(animateFrom.top+=20,animateFrom.left+=100,animateTo.left+=10,animateTo.top+=10,reverse){var temp=animateFrom;animateFrom=animateTo,animateTo=temp}animateDiv.css(animateFrom),animateDiv.fadeIn(function(){animateDiv.animate(animateTo,args.timeout||1e3,function(){animateDiv.fadeOut(function(){animateDiv.remove(),args.callback&&"function"==typeof args.callback&&args.callback()})})})}function doGiftAnimation(args){var animateDiv=$("<div style='height: 50px;width: 50px;background-size: contain;background-repeat:no-repeat;background-position:center;position: absolute;z-index: 99;"+args.image+"' ></div>").appendTo("body"),animateFrom=args.from,animateTo=args.to;animateFrom.top+=90,animateFrom.left+=90,animateTo.left+=90,animateTo.top+=90,animateDiv.css(animateFrom),animateDiv.fadeIn(function(){animateDiv.animate(animateTo,1e3,function(){$timeout(function(){animateDiv.remove()},5e3)})})}function setInitialValues(){scope.blindCount=0}function updatePossibleBet(){scope.possibleBet=getLastBet(),updateButtons()}function updateButtons(){var minBet=getLastBet();scope.disableMinus=scope.possibleBet==minBet||!(scope.possibleBet>minBet),scope.disablePlus=scope.possibleBet==2*minBet&&scope.possibleBet<=scope.table.maxBet||scope.possibleBet>=scope.table.maxBet/2&&scope.player.cardSet.closed||scope.possibleBet>=scope.table.maxBet&&!scope.player.cardSet.closed}function getLastBet(){if(scope.player.cardSet)return scope.player.cardSet.closed?1==scope.table.lastBlind?scope.table.lastBet:scope.table.lastBet/2:1==scope.table.lastBlind?2*scope.table.lastBet:scope.table.lastBet}var performBetAnimation=scope.$on("performBetAnimation",function(evt,args){scope.player&&scope.player.turn&&doAnimation({amount:args.bet,timeout:args.timeout})}),performWinnerAnimation=scope.$on("performWinnerAnimation",function(evt,args){scope.player&&scope.player.winner&&(soundService.winner(),doAnimation({amount:args.bet,timeout:args.timeout,callback:args.callback},!0))}),performBootAnimation=scope.$on("performBootAnimation",function(evt,args){scope.player&&scope.player.active&&doAnimation({amount:args.boot,timeout:args.timeout})}),performGiftAnimation=scope.$on("performGiftAnimation",function(evt,args){var from=$("input[value="+args.from+"]").offset(),to=$("input[value="+args.to+"]").offset();doGiftAnimation({from:from,to:to,image:args.image})}),updatePlayerSuccess=scope.$on("updatePlayerSuccess",function(evt,args){scope.player&&scope.player.active&&scope.player.playerInfo.id==args.playerId&&(scope.player.playerInfo[args.field]=args.value,scope.$apply())});scope.disableActions=!1,scope.pack=function(){scope.player.lastAction="Packed",scope.player.lastBet="",scope.player.packed=!0,scope.disableActions=!0,scope.placePack()},scope.blind=function(){scope.table.lastBlind=!0,scope.table.lastBet=scope.possibleBet,scope.player.lastAction="Blind",scope.player.lastBet=scope.possibleBet,scope.disableActions=!0,scope.blindCount++,scope.placeBet()},scope.chaal=function(){scope.player.lastAction="Chaal",scope.player.lastBet=scope.possibleBet,scope.table.lastBlind=!1,scope.table.lastBet=scope.possibleBet,scope.placeBet(),scope.disableActions=!0},scope.show=function(){scope.player.lastAction="Show",scope.player.lastBet=scope.possibleBet,scope.table.lastBlind=scope.player.cardSet.closed,scope.table.lastBet=scope.possibleBet,scope.player.show=!0,scope.placeBet(),scope.disableActions=!0},scope.sideshow=function(){scope.player.lastAction="Side Show",scope.table.lastBlind=!1,scope.table.lastBet=scope.possibleBet,scope.player.sideshow=!0,scope.disableActions=!0,scope.placeSideShow()},scope.acceptSideShow=function(){scope.player.lastAction="Accepted",scope.respondSideShow()},scope.denySideShow=function(){scope.player.lastAction="Denied",scope.respondSideShow()},scope.changeBet=function(type){switch(type){case"-":scope.possibleBet=scope.possibleBet/2;break;case"+":scope.possibleBet=2*scope.possibleBet}updateButtons()},scope.plus=function(){scope.changeBet("+")},scope.minus=function(){scope.changeBet("-")},scope.$on("startNew",function(args){scope.player&&scope.player.active&&setInitialValues()}),scope.$watch("table",function(newVal){newVal&&(updatePossibleBet(),updateButtons())}),scope.$watch("player.turn",function(newVal){newVal===!1?scope.disableActions=!1:scope.blindCount>=BLIND_ALLOWED&&scope.seeMyCards()}),scope.$watch("player.cardSet.closed",function(newVal){newVal===!1&&updatePossibleBet()}),scope.$on("$destroy",function(){performBetAnimation(),performWinnerAnimation(),performBootAnimation(),performGiftAnimation(),updatePlayerSuccess()}),setInitialValues()}}}]),angular.module("table99.directives").directive("tableNotifications",[function(){return{scope:{showMessage:"=",message:"=",eventOn:"="},templateUrl:"table.notifications.html",link:function(scope,element,attrs){scope.$watch("showMessage",function(newVal,oldVal){newVal===!0?element.find(".text-message").fadeIn("slow"):newVal===!1?element.find(".text-message").fadeOut("slow"):element.find(".text-message").hide()})}}}]),angular.module("table99.directives").directive("tableBet",[function(){return{scope:{table:"="},templateUrl:"table.bet.html",link:function(scope,element,attrs){function fadeOutBet(){var $betInfo=element.find(".bet-info");$betInfo.fadeOut()}function fadeInBet(){var $betInfo=element.find(".bet-info");$betInfo.fadeIn()}scope.$watch("table.showAmount",function(newVal){newVal===!0?fadeInBet():newVal===!1&&fadeOutBet()}),scope.$on("performWinnerAnimation",function(){fadeOutBet()})}}}]),angular.module("table99.directives").directive("tableInfo",[function(){return{scope:{table:"="},templateUrl:"table.info.html",link:function(scope,element,attrs){scope.close=function(){scope.$parent.tableInfoOpen=!1}}}}]),angular.module("table99.directives").directive("useravatarfile",function(){return{restrict:"A",link:function(scope,element){element.bind("click",function(e){angular.element(e.target).siblings("#upload").trigger("click")})}}}),angular.module("table99.directives").directive("scrollBottom",["$timeout",function($timeout){return{link:function(scope,element,attr){function scrollToBottom(element){$timeout(function(){element.animate({scrollTop:element[0].scrollHeight},1e3)},500)}$(element).on("click",function(){var element=$("#"+attr.scrollBottom);scrollToBottom(element)}),scope.$on("scrollToBottom",function(event,data){var element=$("#chat-list");scrollToBottom(element)})}}}]),angular.module("table99.services").factory("soundService",[function(){return{buttonClick:function(){document.getElementById("buttonClickAudio").play()},exitClick:function(){document.getElementById("buttonClickAudio").play()},arrowClick:function(){audio.src="../sounds/swipe.mp3",audio.play()},winner:function(){document.getElementById("applausedAudio").play()},loser:function(){document.getElementById("curseAudio").play()},alert:function(){document.getElementById("alertAudio").play()}}}]),angular.module("table99.services").factory("layoutService",[function(){return{layoutClass:{homeLayout:"home-layout",bodyLayout:"body-layout",gameLayout:"game-layout"}}}]),angular.module("table99.services").factory("cardService",[function(){}]),angular.module("table99.services").factory("userService",["$http","BASE_URL",function($http,BASE_URL){return{getUser:function(params){return $http.post(BASE_URL+"user/get",params)},signin:function(params){return $http.post(BASE_URL+"user/signin",params)},updateAvatar:function(params){return $http.post(BASE_URL+"user/updateAvatar",params)},updateDisplayName:function(params){return $http.post(BASE_URL+"user/updateDisplayName",params)},updateBalance:function(params){return $http.post(BASE_URL+"user/updateBalance",params)},signup:function(params){return $http.post(BASE_URL+"user/signup",params)},fbsignin:function(params){return $http.post(BASE_URL+"user/fbsignin",params)}}}]),angular.module("table99.services").factory("tableService",["$http","BASE_URL",function($http,BASE_URL){return{getAvailableSystemTables:function(params){return $http.post(BASE_URL+"tables/getAvailableSystemTables",params)},getSystemTable:function(params){return $http.post(BASE_URL+"tables/getSystemTable",params)},getCustomTable:function(params){return $http.post(BASE_URL+"tables/getCustomTable",params)},saveChat:function(params){return $http.post(BASE_URL+"tables/saveChat",params)},loadChats:function(params){return $http.post(BASE_URL+"tables/loadChats",params)},createCustomTable:function(params){return $http.post(BASE_URL+"tables/createCustomTable",params)},getCustomTables:function(params){return $http.post(BASE_URL+"tables/getCustomTables",params)},loadGifts:function(params){return $http.post(BASE_URL+"tables/loadGifts",params)}}}]),angular.module("table99.controllers").controller("table99Ctrl",["$scope","cardService",function($scope,cardService){}]),angular.module("table99.controllers").controller("homeCtrl",["$rootScope","$scope","$timeout","$state","layoutService",function($rootScope,$scope,$timeout,$state,layoutService){$rootScope.layout=layoutService.layoutClass.homeLayout,$rootScope.background={"background-image":"none"},$timeout(function(){$state.go("signin",{})},5e3)}]),angular.module("table99.controllers").controller("signUpCtrl",["$rootScope","$localStorage","$scope","userService","$state","layoutService","soundService",function($rootScope,$localStorage,$scope,userService,$state,layoutService,soundService){$scope.guest={},$rootScope.layout=layoutService.layoutClass.bodyLayout,$localStorage&&$localStorage.USER&&$localStorage.USER&&$state.go("tables",{}),$localStorage.BACKGROUND&&($rootScope.background=$localStorage.BACKGROUND),$scope.signup=function(){soundService.buttonClick(),$scope.guest.name&&$scope.guest.email&&$scope.guest.password&&userService.signup({name:$scope.guest.name,email:$scope.guest.email,password:$scope.guest.password}).success(function(res){"success"==res.status&&(alert(res.data.name+", You have sucessfully registerd."),$state.go("signin",{})),"failed"==res.status&&("VALIDATION_FAILED"==res.message&&alert("Please fill the required fields"),"PROBLEM_SIGNUP"==res.message&&alert("Problem in signing up, Please try again later"),"ALREADY_REGISTERED"==res.message&&alert("You have already registerd, Try signing in instead"))})},$scope.goSignIn=function(){soundService.buttonClick(),$state.go("signin",{})}}]),angular.module("table99.controllers").controller("signInCtrl",["$rootScope","$localStorage","$scope","userService","$state","layoutService","soundService",function($rootScope,$localStorage,$scope,userService,$state,layoutService,soundService){function facebookSignIn(name,email,picture){userService.fbsignin({name:name,email:email,picture:picture}).success(function(res){if("success"==res.status){var user=res.data;user.LOGGEDIN=!0,$localStorage.USER=user,$state.go("tables",{})}if("failed"==res.status&&("PROBLEM_SIGNUP"==res.message&&alert("Problem in signing in using facebook, Please try again later"),"ALREADY_REGISTERED"==res.message)){var user=res.data;user.LOGGEDIN=!0,$localStorage.USER=user,$state.go("tables",{})}})}$rootScope.layout=layoutService.layoutClass.bodyLayout,$scope.user={},$localStorage&&$localStorage.USER&&$localStorage.USER.LOGGEDIN&&$state.go("tables",{}),$localStorage.BACKGROUND&&($rootScope.background=$localStorage.BACKGROUND),$scope.signin=function(){soundService.buttonClick(),userService.signin({email:$scope.user.email,password:$scope.user.password}).success(function(res){if("success"==res.status){var user=res.data;user.LOGGEDIN=!0,$localStorage.USER=user,$state.go("tables",{})}"failed"==res.status&&("USER_NOT_FOUND"==res.message&&alert("Invalid username & Password"),"PROBLEM_SIGNIN"==res.message&&alert("Problem in signing in, Please try again later"),"VALIDATION_FAILED"==res.message&&alert("Please provide email & password"))})},$scope.signInUsingFB=function(){function onError(){alert("Problem fetching facebook details, Please try again later")}soundService.buttonClick(),FB.getLoginStatus(function(response){"connected"===response.status?FB.api("me/?fields=email,first_name,last_name,picture.width(200).height(200)",["email","public_profile"],onError,function(response){if(response&&response.first_name&&response.last_name&&response.email&&response.picture){var name=response.first_name+" "+response.last_name,email=response.email,picture=response.picture.data.url;facebookSignIn(name,email,picture)}else onError()}):FB.login(function(response){"connected"===response.status&&FB.api("me/?fields=email,first_name,last_name,picture.width(200).height(200)",["email","public_profile"],onError,function(response){if(response&&response.first_name&&response.last_name&&response.email&&response.picture){var name=response.first_name+" "+response.last_name,email=response.email,picture=response.picture.data.url;facebookSignIn(name,email,picture)}else onError()})},{scope:"email,public_profile"})})},$scope.goSignUp=function(){soundService.buttonClick(),$state.go("signup",{})}}]),angular.module("table99.controllers").controller("tablesCtrl",["$rootScope","$localStorage","$scope","tableService","$state","layoutService","soundService","$mdDialog",function($rootScope,$localStorage,$scope,tableService,$state,layoutService,soundService,$mdDialog){function findTables(){$scope.isLoading||($scope.isLoading=!0,tableService.getCustomTables({owner:$scope.user.id}).success(function(res){if($scope.isLoading=!1,$scope.tables=[{type:"SYSTEM",boot_amount:50,max_players:5,action:"PLAY"},{type:"SYSTEM",boot_amount:100,max_players:5,action:"PLAY"},{type:"SYSTEM",boot_amount:200,max_players:5,action:"PLAY"}],"success"==res.status){for(var i=0;i<res.data.length;i++)res.data[i].type="CUSTOM",res.data[i].action="PLAY";$scope.tables=$scope.tables.concat(res.data)}$scope.tables=$scope.tables.concat([{name:"ADD TABLE",type:"CUSTOM",action:"ADD"}]),"failed"==res.status&&("NO_TABLE_FOUND"==res.message,"PROBLEM_FETCHING_TABLE"==res.message&&alert("Problem fetching your tables, Please try again later"))}))}$rootScope.layout=layoutService.layoutClass.gameLayout,$scope.background="",$scope.user={},$scope.tables=[],$scope.customTables=[],$scope.isLoading=!1,$localStorage&&$localStorage.USER?$scope.user=$localStorage.USER:$state.go("signin",{}),$localStorage.BACKGROUND&&($rootScope.background=$scope.background=$localStorage.BACKGROUND),$scope.user.avatar=$scope.user.avatar?$scope.user.avatar:"background: url(images/default_avatar.jpg);",$scope.user.displayName=$scope.user.displayName?$scope.user.displayName:"Guest",$scope.user.chips=$scope.user.chips?$scope.user.chips:"0",$scope.isCustomCharacter=!($scope.user.avatar.indexOf("characters.jpg")>-1),$scope.$watch("user.avatar",function(){$scope.isCustomCharacter=!($scope.user.avatar.indexOf("characters.jpg")>-1)}),$scope.openUpdateAvatarDialog=function($event){$mdDialog.show($mdDialog.updateAvatar({parent:angular.element(document.body),targetEvent:$event,scope:$scope,preserveScope:!0,locals:{caller:"tables"}}))},$scope.openChangeNameDialog=function($event){$mdDialog.show($mdDialog.updateDisplayName({scope:$scope,preserveScope:!0,parent:angular.element(document.body),targetEvent:$event,locals:{caller:"table"}}))},$scope.openChangeBackgroundDialog=function($event){$mdDialog.show($mdDialog.updateBackground({scope:$scope,parent:angular.element(document.body),targetEvent:$event,preserveScope:!0}))},$scope.openShopDialog=function($event){$mdDialog.show($mdDialog.shop({scope:$scope,preserveScope:!0,parent:angular.element(document.body),targetEvent:$event,locals:{caller:"table"}}))},$scope.slickConfig={variableWidth:!0,slidesToScroll:1,enabled:!0,dots:!1,method:{},event:{beforeChange:function(event,slick,currentSlide,nextSlide){},afterChange:function(event,slick,currentSlide,nextSlide){}}},$scope.signOut=function(){soundService.exitClick(),$localStorage.USER&&($localStorage.USER=void 0,$state.go("signin",{}))},$scope.playTable=function(table){"SYSTEM"==table.type?$scope.playSystemTable(table):"ADD"==table.action?$state.go("createTable",{}):$scope.playCustomTable(table)},$scope.playSystemTable=function(table){soundService.buttonClick(),tableService.getAvailableSystemTables({potAmount:table.boot_amount,maxPlayers:table.max_players,userId:$scope.user.id}).success(function(res){"success"==res.status&&$state.go("play",{id:res.data.id}),"failed"==res.status&&"PROBLEM_FETCH_TABLE"==res.message&&alert("Problem finding available table, Please try again later")})},$scope.playCustomTable=function(table){$state.go("userPlay",{id:table.id,ref:!1})},$scope.goCreateTable=function(){soundService.buttonClick(),$state.go("createTable",{})},findTables()}]),angular.module("table99.controllers").controller("createTableCtrl",["$rootScope","$scope","$timeout","$state","layoutService","$localStorage","soundService","tableService","$filter",function($rootScope,$scope,$timeout,$state,layoutService,$localStorage,soundService,tableService,$filter){$rootScope.layout=layoutService.layoutClass.homeLayout,$scope.user={},$scope.table={},$localStorage&&$localStorage.USER?$scope.user=$localStorage.USER:$state.go("signin",{}),$localStorage.BACKGROUND&&($rootScope.background=$localStorage.BACKGROUND),$scope.createTable=function(){if(soundService.buttonClick(),$scope.table.minPlayers>5)return void alert("Minimum players should be less than or equal to five");if($scope.table.maxPlayers>5)return void alert("Maximum players should be less than or equal to five");var date=$filter("date")(new Date,"yyyy-MM-dd HH:mm:ss");tableService.createCustomTable({name:$scope.table.name,bootAmount:$scope.table.bootAmount,minPlayers:$scope.table.minPlayers,maxPlayers:$scope.table.maxPlayers,owner:$scope.user.id,date:date}).success(function(res){"success"==res.status&&(alert("Table created successfully"),$state.go("tables",{})),"failed"==res.status&&("PROBLEM_TABLE_CREATION"==res.message&&alert("Problem in creating table, Please try again later"),"VALIDATION_FAILED"==res.message&&alert("Please fill the required fields"),"ALREADY_CREATED"==res.message&&alert("A table already exists with same name, Please try using different name"))})}}]),angular.module("table99.controllers").controller("playCtrl",["$rootScope","$localStorage","$scope","tableService","$state","$stateParams","$filter","$timeout","layoutService","soundService","$mdDialog","BASE_URL",function($rootScope,$localStorage,$scope,tableService,$state,$stateParams,$filter,$timeout,layoutService,soundService,$mdDialog,BASE_URL){function loadChats(){tableService.loadChats({table_id:tableId}).success(function(res){"success"==res.status&&($scope.chats=res.data),"failed"==res.status&&"PROBLEM_FETCHING_CHAT"==res.message&&alert("Problem in fetching chats, Please try after sometime")})}function getNextSeat(slot){for(var slotNum=1*slot.substr(4),seat=1,currentPlayerSlot=1*$scope.currentPlayer.slot.substr(4),nextSlot=currentPlayerSlot,iC=0;iC<4&&(nextSlot++,nextSlot>5&&(nextSlot%=5),seat++,slotNum!==nextSlot);iC++);return"seat"+seat}function setOtherPlayers(currentPlayer,otherPlayers){for(var keyId in otherPlayers){var objPlayer=otherPlayers[keyId];if(currentPlayer.slot!==objPlayer.slot){var seat=getNextSeat(objPlayer.slot);$scope[seat]=objPlayer,$scope.seatingInfo[objPlayer.slot]=seat,$scope.seatingInfoById[objPlayer.id]=seat}}$scope.$digest()}function showNotification(args,callback){$scope.notificationMessage=args.message,$scope.showNotification=!0,setTimeout(function(){$scope.showNotification=!1,$scope.$digest(),callback&&"function"==typeof callback&&callback()},args.timeout),$scope.$digest()}function initSocketEvents(){socket.on("betPlaced",function(args){if(args.tableId==tableId){$scope.$broadcast("performBetAnimation",{bet:args.bet.amount,timeout:2e3});var lastActionPlayer=$scope[$scope.seatingInfoById[args.placedBy]];lastActionPlayer&&(lastActionPlayer.lastAction=args.bet.action,lastActionPlayer.lastBet=args.bet.amount),$scope.$digest(),setTimeout(function(){$scope.table=args.table;for(var player in args.players){var currentPl=$scope[$scope.seatingInfoById[args.players[player].id]];currentPl.turn=args.players[player].turn,currentPl.packed=args.players[player].packed,currentPl.playerInfo.chips=args.players[player].playerInfo.chips}$scope.$digest()},3e3)}}),socket.on("sideShowResponded",function(args){function sideShowRespond(){$scope.table=args.table;for(var player in args.players){var currentPl=$scope[$scope.seatingInfoById[args.players[player].id]];currentPl.lastAction=args.players[player].lastAction,currentPl.sideShowTurn=args.players[player].sideShowTurn,currentPl.turn=args.players[player].turn,currentPl.packed=args.players[player].packed}$scope.$digest()}args.tableId!=tableId&&(args.message?showNotification({message:args.message,timeout:3e3},sideShowRespond):sideShowRespond())}),socket.on("sideShowResult",function(args){function sideShowResult(){$scope.table=args.table;for(var player in args.players){var currentPl=$scope[$scope.seatingInfoById[args.players[player].id]];currentPl.cardSet.cards=args.players[player].cardSet.cards,currentPl.cardSet.closed=args.players[player].cardSet.closed}$scope.$digest()}args.message?showNotification({message:args.message,timeout:2e3},sideShowResult):sideShowResult()}),socket.on("sideShowPlaced",function(args){function sideShowProcess(){$scope.table=args.table;for(var player in args.players){var currentPl=$scope[$scope.seatingInfoById[args.players[player].id]];currentPl.sideShowTurn=args.players[player].sideShowTurn,currentPl.sideShowTurn&&(currentPl.sideShowMessage=args.message)}$scope.$digest()}args.tableId==tableId&&($scope.$broadcast("performBetAnimation",{bet:args.bet.amount,timeout:2e3}),args.message?showNotification({message:args.message,timeout:2e3},sideShowProcess):sideShowProcess())}),socket.on("showWinner",function(args){function showWinner(){$scope.table=args.table,args.message&&showNotification({message:args.message,timeout:args.timeout||4e3});var lastActionPlayer=$scope[$scope.seatingInfoById[args.placedBy]];lastActionPlayer&&(lastActionPlayer.lastAction=args.bet.action,lastActionPlayer.lastBet=args.bet.amount);for(var player in args.players){var playerSeat=$scope.seatingInfoById[args.players[player].id];$scope[playerSeat].packed=args.players[player].packed,$scope[playerSeat].active=args.players[player].active,$scope[playerSeat].turn=args.players[player].turn,$scope[playerSeat].winner=args.players[player].winner,("currentPlayer"!==playerSeat||"currentPlayer"===playerSeat&&$scope[playerSeat].cardSet.closed)&&($scope[playerSeat].cardSet.cards=args.players[player].cardSet.cards,$scope[playerSeat].cardSet.closed=args.players[player].cardSet.closed)}$scope.$digest(),$scope.$broadcast("performWinnerAnimation",{bet:args.table.amount,timeout:2e3,callback:function(){for(var player in args.players){var playerSeat=$scope.seatingInfoById[args.players[player].id];$scope[playerSeat].playerInfo.chips=args.players[player].playerInfo.chips}}})}args.tableId==tableId&&(args.potLimitExceeded?showNotification({message:"Pot Limit Exceeded Force Show",timeout:3e3},showWinner):args.packed||args.potLimitExceeded?showWinner():($scope.$broadcast("performBetAnimation",{bet:args.bet.amount,timeout:2e3}),setTimeout(showWinner,3e3)),args.lastPlayerGameEnded&&(alert("Game is ending now. See you later."),$timeout(function(){socket.emit("gameEndConfirmed",{table:args.tableId,player:args.playerId}),$state.go("tables",{})},2e3)))}),socket.on("playerPacked",function(args){if(args.tabbleId==tableId){$scope.table=args.table;var lastActionPlayer=$scope[$scope.seatingInfoById[args.placedBy]];lastActionPlayer&&(lastActionPlayer.lastAction=args.bet.action,lastActionPlayer.lastBet=args.bet.amount);for(var player in args.players){var currentPl=$scope[$scope.seatingInfoById[args.players[player].id]];currentPl.turn=args.players[player].turn,currentPl.packed=args.players[player].packed,currentPl.playerInfo.chips=args.players[player].playerInfo.chips}$scope.$digest()}}),socket.on("connectionSuccess",function(args){$scope.user.clientId=args.id,tableId=args.tableId,socket.emit("joinTable",{player:$scope.user,tableId:tableId})}),socket.on("tableJoined",function(args){args.tableId==tableId&&($scope.seatingInfo[args.player.slot]="currentPlayer",$scope.seatingInfoById[args.player.id]="currentPlayer",$scope.currentPlayer=args.player,setOtherPlayers($scope.currentPlayer,args.player.otherPlayers),$scope.$digest())}),socket.on("playerLeft",function(args){if(args.tableId==tableId){$scope[$scope.seatingInfo[args.removedPlayer.slot]]=null,$scope[$scope.seatingInfoById[args.removedPlayer.id]]=null,delete $scope.seatingInfo[args.removedPlayer.slot],delete $scope.seatingInfo[args.removedPlayer.id],$scope.table.isShowAvailable=args.table.isShowAvailable,$scope.table.isSideShowAvailable=args.table.isSideShowAvailable;for(var player in args.players){var currentPl=$scope[$scope.seatingInfoById[args.players[player].id]];currentPl.turn=args.players[player].turn,currentPl.packed=args.players[player].packed,currentPl.playerInfo.chips=args.players[player].playerInfo.chips}$scope.$digest()}}),socket.on("gameCountDown",function(args){if(args.tableId==tableId){
var counter=args.counter;$scope.table&&($scope.table.showAmount=!1),$scope.gameCountdownMessage="Your game will begin in "+counter+" seconds",$scope.showMessage=!0,$scope.$digest();var interValId=window.setInterval(function(){counter--,0==counter?(clearInterval(interValId),$scope.showMessage=!1):$scope.gameCountdownMessage="Your game will begin in "+counter+" seconds",$scope.$digest()},1e3)}}),socket.on("cardsSeen",function(args){args.tableId==tableId&&($scope.currentPlayer.cardSet.cards=args.cardsInfo,$scope.currentPlayer.cardSet.closed=!1,$scope.$digest())}),socket.on("playerCardSeen",function(args){if(args.tableId==tableId){$scope[$scope.seatingInfoById[args.id]].lastAction="Card Seen";for(var player in args.players)$scope[$scope.seatingInfoById[args.players[player].id]].isSideShowAvailable=args.players[player].isSideShowAvailable;$scope.$digest()}}),socket.on("notification",function(args){args.tableId==tableId&&showNotification(args)}),socket.on("resetTable",function(args){if(args.tableId==tableId){$scope.table=args.table,$scope.showMessage=!1,$scope.table.showAmount=!1;for(var player in args.players)$scope[$scope.seatingInfoById[args.players[player].id]]=args.players[player];$scope.$digest()}}),socket.on("startNew",function(args){if(args.tableId==tableId){$scope.$emit("startNew",{args:args});for(var player in args.players)$scope[$scope.seatingInfoById[args.players[player].id]].turn=!1,$scope[$scope.seatingInfoById[args.players[player].id]].winner=!1,$scope[$scope.seatingInfoById[args.players[player].id]].packed=!1,$scope[$scope.seatingInfoById[args.players[player].id]].active=!0,$scope[$scope.seatingInfoById[args.players[player].id]].cardSet=null,$scope[$scope.seatingInfoById[args.players[player].id]].lastAction="",$scope[$scope.seatingInfoById[args.players[player].id]].lastBet="";$scope.$digest(),showNotification({message:"Collecting boot amount of "+$filter("number")(args.table.boot),timeout:2e3},function(){$scope.$broadcast("performBootAnimation",{boot:args.table.boot,timeout:2e3})}),setTimeout(function(){$scope.table=args.table,$scope.showMessage=!1,$scope.table.showAmount=!0;for(var player in args.players)$scope.lastTurn&&($scope[$scope.seatingInfoById[$scope.lastTurn]].turn=!1),$scope[$scope.seatingInfoById[args.players[player].id]]=args.players[player];$scope.$digest()},4e3)}}),socket.on("newPlayerJoined",function(args){if(args.tableId==tableId){var seat=getNextSeat(args.player.slot);$scope.seatingInfo[args.player.slot]=seat,$scope.seatingInfoById[args.player.id]=seat,$scope[seat]=args.player,$scope.$digest()}}),socket.on("showChatMessage",function(chat){soundService.alert(),chat.table_id==tableId&&($scope.chats.push({from:chat.from,message:chat.message,date:chat.date}),$scope.$apply(),$rootScope.$broadcast("scrollToBottom",{}),$scope.isChatWindowOpen||($scope.isChatWindowOpen=!0))}),socket.on("updatePlayerOnServerSuccess",function(args){args.tableId==tableId&&$scope.$broadcast("updatePlayerSuccess",args)}),socket.on("sendGiftSuccess",function(args){args.tableId==tableId&&$scope.$broadcast("performGiftAnimation",args)})}function fetchTable(){tableLoadingInProgress||(tableLoadingInProgress=!0,tableService.getSystemTable({id:tableId}).success(function(res){if(tableLoadingInProgress=!1,"success"==res.status){$scope.table=res.data,initSocketEvents(),loadChats();var data=res.data;data.type="SYSTEM",socket.emit("createTable",data)}"failed"==res.status&&"PROBLEM_FETCH_TABLE"==res.message&&$state.go("tables",{})}))}var socket,tableId=$stateParams.id,tableLoadingInProgress=!1;$rootScope.layout=layoutService.layoutClass.bodyLayout,$scope.background="",$scope.user={},$scope.table={},$scope.currentPlayer={},$scope.seatingInfo={},$scope.seatingInfoById={},$scope.chats=[],$scope.dealSeat="",$scope.currentTurn="",$scope.isChatWindowOpen=!1,$scope.chat={},$scope.chat.normal_height=!1,$scope.tableId=tableId,$scope.tableInfoOpen=!1,$scope.isMenuOpen=!1,$localStorage&&$localStorage.USER?($scope.user=$localStorage.USER,socket=io.connect(BASE_URL),fetchTable()):$state.go("signin",{}),$localStorage.BACKGROUND&&($rootScope.background=$scope.background=$localStorage.BACKGROUND),$scope.toggleChatWindow=function(){soundService.buttonClick(),$scope.isChatWindowOpen=!$scope.isChatWindowOpen},$scope.onChatBoxBlur=function(){$scope.chat.normal_height=!0},$scope.enterChatMessage=function(){soundService.buttonClick();var date=$filter("date")(new Date,"yyyy-MM-dd HH:mm:ss");tableService.saveChat({table_id:tableId,user_id:$scope.user.id,message:$scope.chat.message,date:date}).success(function(res){"success"==res.status&&(socket.emit("newChatMessageAdded",{table_id:tableId,user_id:$scope.user.id,from:$scope.user.displayName,message:$scope.chat.message,date:$filter("date")(new Date,"dd MMM yyyy h:mm:ss a")}),$scope.chat.message=""),"failed"==res.status&&"PROBLEM_ADDING_CHAT"==res.message&&alert("Problem in chatting, Please try after some time")})},$scope.autoExpandChatBox=function(e){var element="object"==typeof e?e.target:document.getElementById(e),scrollHeight=element.scrollHeight;element.style.height=scrollHeight-10+"px"},$scope.exitGame=function(){confirm("Are you sure want to left the game")&&(soundService.exitClick(),socket.emit("removePlayer",$scope.currentPlayer),$state.go("tables",{}))},$scope.seeMyCards=function(){socket.emit("seeMyCards",{player:$scope.currentPlayer,tableId:tableId})},$scope.placeBet=function(){socket.emit("placeBet",{tableId:tableId,player:$scope.currentPlayer,bet:{action:$scope.currentPlayer.lastAction,amount:$scope.table.lastBet,blind:$scope.table.lastBlind,show:$scope.currentPlayer.show}}),$scope.currentPlayer.playerInfo.chips-=$scope.table.lastBet},$scope.placeSideShow=function(){socket.emit("placeSideShow",{tableId:tableId,player:$scope.currentPlayer,bet:{action:$scope.currentPlayer.lastAction,amount:$scope.table.lastBet,blind:$scope.table.lastBlind,show:$scope.currentPlayer.show}}),$scope.currentPlayer.playerInfo.chips-=$scope.table.lastBet},$scope.respondSideShow=function(){socket.emit("respondSideShow",{tableId:tableId,player:$scope.currentPlayer,lastAction:$scope.currentPlayer.lastAction})},$scope.placePack=function(){socket.emit("placePack",{tableId:tableId,player:$scope.currentPlayer,bet:{action:$scope.currentPlayer.lastAction,amount:"",blind:!1}})},$scope.toggleTableInfo=function(){$scope.table&&$scope.table.gameStarted&&($scope.tableInfoOpen=!$scope.tableInfoOpen)},$scope.toggleMenu=function(){$scope.isMenuOpen=!$scope.isMenuOpen},$scope.closeMenu=function(){$scope.isMenuOpen=!1},$scope.closeChat=function(){$scope.isChatWindowOpen=!$scope.isChatWindowOpen},$scope.sendGift=function(args){socket.emit("sendGift",args)},$scope.user.avatar=$scope.user.avatar?$scope.user.avatar:"background: url(images/default_avatar.jpg);",$scope.user.displayName=$scope.user.displayName?$scope.user.displayName:"Guest",$scope.user.chips=$scope.user.chips?$scope.user.chips:"0",$scope.isCustomCharacter=!($scope.user.avatar.indexOf("characters.jpg")>-1),$scope.$watch("user.avatar",function(){$scope.isCustomCharacter=!($scope.user.avatar.indexOf("characters.jpg")>-1)}),$scope.openUpdateAvatarDialog=function($event){$mdDialog.show($mdDialog.updateAvatar({scope:$scope,preserveScope:!0,parent:angular.element(document.body),targetEvent:$event,locals:{caller:"game"}}))},$scope.openChangeNameDialog=function($event){$mdDialog.show($mdDialog.updateDisplayName({parent:angular.element(document.body),targetEvent:$event,scope:$scope,preserveScope:!0,locals:{caller:"game"}}))},$scope.updatePlayerOnServer=function(tableId,playerId,field,value){socket.emit("updatePlayerOnServer",{tableId:tableId,playerId:playerId,field:field,value:value})},$scope.openChangeBackgroundDialog=function($event){$mdDialog.show($mdDialog.updateBackground({parent:angular.element(document.body),targetEvent:$event,scope:$scope,preserveScope:!0}))},$scope.openShopDialog=function($event){$mdDialog.show($mdDialog.shop({scope:$scope,preserveScope:!0,parent:angular.element(document.body),targetEvent:$event,locals:{caller:"game"}}))},$scope.openShopDialogFromMenu=function(){$scope.isMenuOpen=!1,$scope.openShopDialog()},$scope.switchTable=function(){confirm("Are you sure wants to switch the game")&&(socket.emit("removePlayer",$scope.currentPlayer),tableService.getAvailableSystemTables({potAmount:$scope.table.pot_amount,maxPlayers:$scope.table.max_players,userId:$scope.user.id}).success(function(res){"success"==res.status&&$state.go("play",{id:res.data.id}),"failed"==res.status&&"PROBLEM_FETCH_TABLE"==res.message&&alert("Problem finding available table, Please try again later")}))}}]),angular.module("table99.controllers").controller("userPlayCtrl",["$rootScope","$localStorage","$scope","tableService","$state","$stateParams","$filter","$timeout","layoutService","soundService","$mdDialog","userService","BASE_URL",function($rootScope,$localStorage,$scope,tableService,$state,$stateParams,$filter,$timeout,layoutService,soundService,$mdDialog,userService,BASE_URL){function onError(){alert("Problem fetching facebook details, Please try again later")}function facebookSignIn(name,email,picture){userService.fbsignin({name:name,email:email,picture:picture}).success(function(res){if("success"==res.status){var user=res.data;user.LOGGEDIN=!0,$localStorage.USER=user,initialize()}if("failed"==res.status&&("PROBLEM_SIGNUP"==res.message&&alert("Problem in signing in using facebook, Please try again later"),"ALREADY_REGISTERED"==res.message)){var user=res.data;user.LOGGEDIN=!0,$localStorage.USER=user,initialize()}})}function loadChats(){tableService.loadChats({table_id:tableId}).success(function(res){"success"==res.status&&($scope.chats=res.data),"failed"==res.status&&"PROBLEM_FETCHING_CHAT"==res.message&&alert("Problem in fetching chats, Please try after sometime")})}function getNextSeat(slot){for(var slotNum=1*slot.substr(4),seat=1,currentPlayerSlot=1*$scope.currentPlayer.slot.substr(4),nextSlot=currentPlayerSlot,iC=0;iC<4&&(nextSlot++,nextSlot>5&&(nextSlot%=5),seat++,slotNum!==nextSlot);iC++);return"seat"+seat}function setOtherPlayers(currentPlayer,otherPlayers){for(var keyId in otherPlayers){var objPlayer=otherPlayers[keyId];if(currentPlayer.slot!==objPlayer.slot){var seat=getNextSeat(objPlayer.slot);$scope[seat]=objPlayer,$scope.seatingInfo[objPlayer.slot]=seat,$scope.seatingInfoById[objPlayer.id]=seat}}$scope.$digest()}function showNotification(args,callback){$scope.notificationMessage=args.message,$scope.showNotification=!0,setTimeout(function(){$scope.showNotification=!1,$scope.$digest(),callback&&"function"==typeof callback&&callback()},args.timeout),$scope.$digest()}function initSocketEvents(){socket.on("betPlaced",function(args){if(args.tableId==tableId){$scope.$broadcast("performBetAnimation",{bet:args.bet.amount,timeout:2e3});var lastActionPlayer=$scope[$scope.seatingInfoById[args.placedBy]];lastActionPlayer&&(lastActionPlayer.lastAction=args.bet.action,lastActionPlayer.lastBet=args.bet.amount),$scope.$digest(),setTimeout(function(){$scope.table=args.table;for(var player in args.players){var currentPl=$scope[$scope.seatingInfoById[args.players[player].id]];currentPl.turn=args.players[player].turn,currentPl.packed=args.players[player].packed,currentPl.playerInfo.chips=args.players[player].playerInfo.chips}$scope.$digest()},3e3)}}),socket.on("sideShowResponded",function(args){function sideShowRespond(){$scope.table=args.table;for(var player in args.players){var currentPl=$scope[$scope.seatingInfoById[args.players[player].id]];currentPl.lastAction=args.players[player].lastAction,currentPl.sideShowTurn=args.players[player].sideShowTurn,currentPl.turn=args.players[player].turn,currentPl.packed=args.players[player].packed}$scope.$digest()}args.tableId!=tableId&&(args.message?showNotification({message:args.message,timeout:3e3},sideShowRespond):sideShowRespond())}),socket.on("sideShowResult",function(args){function sideShowResult(){$scope.table=args.table;for(var player in args.players){var currentPl=$scope[$scope.seatingInfoById[args.players[player].id]];currentPl.cardSet.cards=args.players[player].cardSet.cards,currentPl.cardSet.closed=args.players[player].cardSet.closed}$scope.$digest()}args.message?showNotification({message:args.message,timeout:2e3},sideShowResult):sideShowResult()}),socket.on("sideShowPlaced",function(args){function sideShowProcess(){$scope.table=args.table;for(var player in args.players){var currentPl=$scope[$scope.seatingInfoById[args.players[player].id]];currentPl.sideShowTurn=args.players[player].sideShowTurn,currentPl.sideShowTurn&&(currentPl.sideShowMessage=args.message)}$scope.$digest()}args.tableId==tableId&&($scope.$broadcast("performBetAnimation",{bet:args.bet.amount,timeout:2e3}),args.message?showNotification({message:args.message,timeout:2e3},sideShowProcess):sideShowProcess())}),socket.on("showWinner",function(args){function showWinner(){$scope.table=args.table,args.message&&showNotification({message:args.message,timeout:args.timeout||4e3});var lastActionPlayer=$scope[$scope.seatingInfoById[args.placedBy]];lastActionPlayer&&(lastActionPlayer.lastAction=args.bet.action,lastActionPlayer.lastBet=args.bet.amount);for(var player in args.players){var playerSeat=$scope.seatingInfoById[args.players[player].id];$scope[playerSeat].packed=args.players[player].packed,$scope[playerSeat].active=args.players[player].active,$scope[playerSeat].turn=args.players[player].turn,$scope[playerSeat].winner=args.players[player].winner,("currentPlayer"!==playerSeat||"currentPlayer"===playerSeat&&$scope[playerSeat].cardSet.closed)&&($scope[playerSeat].cardSet.cards=args.players[player].cardSet.cards,$scope[playerSeat].cardSet.closed=args.players[player].cardSet.closed)}$scope.$digest(),$scope.$broadcast("performWinnerAnimation",{bet:args.table.amount,timeout:2e3,callback:function(){for(var player in args.players){var playerSeat=$scope.seatingInfoById[args.players[player].id];$scope[playerSeat].playerInfo.chips=args.players[player].playerInfo.chips}}})}args.tableId==tableId&&(args.potLimitExceeded?showNotification({message:"Pot Limit Exceeded Force Show",timeout:3e3},showWinner):args.packed||args.potLimitExceeded?showWinner():($scope.$broadcast("performBetAnimation",{bet:args.bet.amount,timeout:2e3}),setTimeout(showWinner,3e3)),args.lastPlayerGameEnded&&(alert("Game is ending now. See you later."),$timeout(function(){socket.emit("gameEndConfirmed",{table:args.tableId,player:args.playerId}),$state.go("tables",{})},2e3)))}),socket.on("playerPacked",function(args){if(args.tabbleId==tableId){$scope.table=args.table;var lastActionPlayer=$scope[$scope.seatingInfoById[args.placedBy]];lastActionPlayer&&(lastActionPlayer.lastAction=args.bet.action,lastActionPlayer.lastBet=args.bet.amount);for(var player in args.players){var currentPl=$scope[$scope.seatingInfoById[args.players[player].id]];currentPl.turn=args.players[player].turn,currentPl.packed=args.players[player].packed,currentPl.playerInfo.chips=args.players[player].playerInfo.chips}$scope.$digest()}}),socket.on("connectionSuccess",function(args){$scope.user.clientId=args.id,tableId=args.tableId,socket.emit("joinTable",{player:$scope.user,tableId:tableId})}),socket.on("tableJoined",function(args){args.tableId==tableId&&($scope.seatingInfo[args.player.slot]="currentPlayer",$scope.seatingInfoById[args.player.id]="currentPlayer",$scope.currentPlayer=args.player,setOtherPlayers($scope.currentPlayer,args.player.otherPlayers),$scope.$digest())}),socket.on("playerLeft",function(args){if(args.tableId==tableId){$scope[$scope.seatingInfo[args.removedPlayer.slot]]=null,$scope[$scope.seatingInfoById[args.removedPlayer.id]]=null,delete $scope.seatingInfo[args.removedPlayer.slot],delete $scope.seatingInfo[args.removedPlayer.id],$scope.table.isShowAvailable=args.table.isShowAvailable,$scope.table.isSideShowAvailable=args.table.isSideShowAvailable;for(var player in args.players){var currentPl=$scope[$scope.seatingInfoById[args.players[player].id]];currentPl.turn=args.players[player].turn,currentPl.packed=args.players[player].packed,currentPl.playerInfo.chips=args.players[player].playerInfo.chips}$scope.$digest()}}),socket.on("gameCountDown",function(args){if(args.tableId==tableId){var counter=args.counter;$scope.table&&($scope.table.showAmount=!1),$scope.gameCountdownMessage="Your game will begin in "+counter+" seconds",$scope.showMessage=!0,$scope.$digest();var interValId=window.setInterval(function(){counter--,0==counter?(clearInterval(interValId),$scope.showMessage=!1):$scope.gameCountdownMessage="Your game will begin in "+counter+" seconds",$scope.$digest()},1e3)}}),socket.on("cardsSeen",function(args){args.tableId==tableId&&($scope.currentPlayer.cardSet.cards=args.cardsInfo,$scope.currentPlayer.cardSet.closed=!1,$scope.$digest())}),socket.on("playerCardSeen",function(args){if(args.tableId==tableId){$scope[$scope.seatingInfoById[args.id]].lastAction="Card Seen";for(var player in args.players)$scope[$scope.seatingInfoById[args.players[player].id]].isSideShowAvailable=args.players[player].isSideShowAvailable;$scope.$digest()}}),socket.on("notification",function(args){args.tableId==tableId&&showNotification(args)}),socket.on("resetTable",function(args){if(args.tableId==tableId){$scope.table=args.table,$scope.showMessage=!1,$scope.table.showAmount=!1;for(var player in args.players)$scope[$scope.seatingInfoById[args.players[player].id]]=args.players[player];$scope.$digest()}}),socket.on("startNew",function(args){if(args.tableId==tableId){$scope.$emit("startNew",{args:args});for(var player in args.players)$scope[$scope.seatingInfoById[args.players[player].id]].turn=!1,$scope[$scope.seatingInfoById[args.players[player].id]].winner=!1,$scope[$scope.seatingInfoById[args.players[player].id]].packed=!1,$scope[$scope.seatingInfoById[args.players[player].id]].active=!0,$scope[$scope.seatingInfoById[args.players[player].id]].cardSet=null,$scope[$scope.seatingInfoById[args.players[player].id]].lastAction="",$scope[$scope.seatingInfoById[args.players[player].id]].lastBet="";$scope.$digest(),showNotification({message:"Collecting boot amount of "+$filter("number")(args.table.boot),timeout:2e3},function(){$scope.$broadcast("performBootAnimation",{boot:args.table.boot,timeout:2e3})}),setTimeout(function(){$scope.table=args.table,$scope.showMessage=!1,$scope.table.showAmount=!0;for(var player in args.players)$scope.lastTurn&&($scope[$scope.seatingInfoById[$scope.lastTurn]].turn=!1),$scope[$scope.seatingInfoById[args.players[player].id]]=args.players[player];$scope.$digest()},4e3)}}),socket.on("newPlayerJoined",function(args){if(args.tableId==tableId){var seat=getNextSeat(args.player.slot);$scope.seatingInfo[args.player.slot]=seat,$scope.seatingInfoById[args.player.id]=seat,$scope[seat]=args.player,$scope.$digest()}}),socket.on("showChatMessage",function(chat){soundService.alert(),chat.table_id==tableId&&($scope.chats.push({from:chat.from,message:chat.message,date:chat.date}),$scope.$apply(),$rootScope.$broadcast("scrollToBottom",{}),$scope.isChatWindowOpen||($scope.isChatWindowOpen=!0))}),socket.on("sendGiftSuccess",function(args){args.tableId==tableId&&$scope.$broadcast("performGiftAnimation",args)})}function fetchTable(){tableLoadingInProgress||(tableLoadingInProgress=!0,tableService.getCustomTable({id:tableId}).success(function(res){if(tableLoadingInProgress=!1,"success"==res.status){$scope.table=res.data,$scope.table.invitedPlayerCount=0,initSocketEvents(),loadChats(),$rootScope.pageTitle="Play "+$scope.table.name+" with "+$scope.user.displayName;var data=res.data;data.type="CUSTOM",socket.emit("createTable",data)}"failed"==res.status&&"PROBLEM_FETCH_TABLE"==res.message&&(alert("Problem finding table, Going back to tables"),$state.go("tables",{}))}))}function initialize(){$scope.user=$localStorage.USER,socket=io.connect(BASE_URL),fetchTable()}var socket,tableId=$stateParams.id,referer=$stateParams.ref,tableLoadingInProgress=!1;$rootScope.layout=layoutService.layoutClass.bodyLayout,$scope.background="",$scope.user={},$scope.table={},$scope.currentPlayer={},$scope.seatingInfo={},$scope.seatingInfoById={},$scope.chats=[],$scope.dealSeat="",$scope.currentTurn="",$scope.isChatWindowOpen=!1,$scope.chat={},$scope.chat.normal_height=!1,$scope.tableId=tableId,$scope.tableInfoOpen=!1,$scope.isMenuOpen=!1,$localStorage?void 0==$localStorage.USER||"false"!=referer&&"true"!=referer?void 0==$localStorage.USER&&"true"==referer&&$timeout(function(){FB.getLoginStatus(function(response){"connected"===response.status?FB.api("me/?fields=email,first_name,last_name,picture.width(200).height(200)",["email","public_profile"],onError,function(response){if(response&&response.first_name&&response.last_name&&response.email&&response.picture){var name=response.first_name+" "+response.last_name,email=response.email,picture=response.picture.data.url;facebookSignIn(name,email,picture)}else onError()}):FB.login(function(response){"connected"===response.status&&FB.api("me/?fields=email,first_name,last_name,picture.width(200).height(200)",["email","public_profile"],onError,function(response){if(response&&response.first_name&&response.last_name&&response.email&&response.picture){var name=response.first_name+" "+response.last_name,email=response.email,picture=response.picture.data.url;facebookSignIn(name,email,picture)}else onError()})},{scope:"email,public_profile"})})},2e3):initialize():$state.go("signin",{}),$localStorage.BACKGROUND&&($rootScope.background=$scope.background=$localStorage.BACKGROUND),$scope.toggleChatWindow=function(){soundService.buttonClick(),$scope.isChatWindowOpen=!$scope.isChatWindowOpen},$scope.onChatBoxBlur=function(){$scope.chat.normal_height=!0},$scope.enterChatMessage=function(){soundService.buttonClick();var date=$filter("date")(new Date,"yyyy-MM-dd HH:mm:ss");tableService.saveChat({table_id:tableId,user_id:$scope.user.id,message:$scope.chat.message,date:date}).success(function(res){"success"==res.status&&(socket.emit("newChatMessageAdded",{table_id:tableId,user_id:$scope.user.id,from:$scope.user.displayName,message:$scope.chat.message,date:$filter("date")(new Date,"dd MMM yyyy h:mm:ss a")}),$scope.chat.message=""),"failed"==res.status&&"PROBLEM_ADDING_CHAT"==res.message&&alert("Problem in chatting, Please try after some time")})},$scope.autoExpandChatBox=function(e){var element="object"==typeof e?e.target:document.getElementById(e),scrollHeight=element.scrollHeight;element.style.height=scrollHeight-10+"px"},$scope.exitGame=function(){confirm("Are you sure want to left the game")&&(soundService.exitClick(),socket.emit("removePlayer",$scope.currentPlayer),$state.go("tables",{}))},$scope.seeMyCards=function(){socket.emit("seeMyCards",{player:$scope.currentPlayer,tableId:tableId})},$scope.placeBet=function(){socket.emit("placeBet",{tableId:tableId,player:$scope.currentPlayer,bet:{action:$scope.currentPlayer.lastAction,amount:$scope.table.lastBet,blind:$scope.table.lastBlind,show:$scope.currentPlayer.show}}),$scope.currentPlayer.playerInfo.chips-=$scope.table.lastBet},$scope.placeSideShow=function(){socket.emit("placeSideShow",{tableId:tableId,player:$scope.currentPlayer,bet:{action:$scope.currentPlayer.lastAction,amount:$scope.table.lastBet,blind:$scope.table.lastBlind,show:$scope.currentPlayer.show}}),$scope.currentPlayer.playerInfo.chips-=$scope.table.lastBet},$scope.respondSideShow=function(){socket.emit("respondSideShow",{tableId:tableId,player:$scope.currentPlayer,lastAction:$scope.currentPlayer.lastAction})},$scope.placePack=function(){socket.emit("placePack",{tableId:tableId,player:$scope.currentPlayer,bet:{action:$scope.currentPlayer.lastAction,amount:"",blind:!1}})},$scope.toggleTableInfo=function(){$scope.table&&$scope.table.gameStarted&&($scope.tableInfoOpen=!$scope.tableInfoOpen)},$scope.toggleMenu=function(){$scope.isMenuOpen=!$scope.isMenuOpen},$scope.closeMenu=function(){$scope.isMenuOpen=!1},$scope.closeChat=function(){$scope.isChatWindowOpen=!$scope.isChatWindowOpen},$scope.sendGift=function(args){socket.emit("sendGift",args)},$scope.user.avatar=$scope.user.avatar?$scope.user.avatar:"background: url(images/default_avatar.jpg);",$scope.user.displayName=$scope.user.displayName?$scope.user.displayName:"Guest",$scope.user.chips=$scope.user.chips?$scope.user.chips:"0",$scope.isCustomCharacter=!($scope.user.avatar.indexOf("characters.jpg")>-1),$scope.$watch("user.avatar",function(){$scope.isCustomCharacter=!($scope.user.avatar.indexOf("characters.jpg")>-1)}),$scope.openUpdateAvatarDialog=function($event){$mdDialog.show($mdDialog.updateAvatar({scope:$scope,preserveScope:!0,parent:angular.element(document.body),targetEvent:$event,locals:{caller:"game"}}))},$scope.openChangeNameDialog=function($event){$mdDialog.show($mdDialog.updateDisplayName({scope:$scope,preserveScope:!0,parent:angular.element(document.body),targetEvent:$event,locals:{caller:"game"}}))},$scope.openChangeBackgroundDialog=function($event){$mdDialog.show($mdDialog.updateBackground({scope:$scope,preserveScope:!0,parent:angular.element(document.body),targetEvent:$event}))},$scope.openShopDialog=function($event){$mdDialog.show($mdDialog.shop({scope:$scope,preserveScope:!0,parent:angular.element(document.body),targetEvent:$event,locals:{caller:"game"}}))},$scope.openFBFriendsDialog=function($event){FB.ui({method:"send",link:BASE_URL+"#/userPlay/"+$scope.table.id+"/true"})},$scope.openShopDialogFromMenu=function(){$scope.isMenuOpen=!1,$scope.openShopDialog()},$scope.updatePlayerOnServer=function(tableId,playerId,field,value){socket.emit("updatePlayerOnServer",{tableId:tableId,playerId:playerId,field:field,value:value})}}]),angular.module("table99.controllers").controller("nameDialogCtrl",["$rootScope","$scope","$state","$localStorage","soundService","userService","$mdDialog","caller",function($rootScope,$scope,$state,$localStorage,soundService,userService,$mdDialog,caller){$scope.changeDisplayName=function(){if(soundService.buttonClick(),$scope.user){var userId=$scope.user.id,displayName=$scope.user.displayName;userService.updateDisplayName({id:userId,displayName:displayName}).success(function(res){if("success"==res.status){if($localStorage.USER){var localStorageData=$localStorage.USER;localStorageData.displayName=res.data.displayName,$localStorage.USER=localStorageData}"game"==caller&&($scope.currentPlayer.playerInfo.displayName=$scope.user.displayName=res.data.displayName,$scope.updatePlayerOnServer($scope.tableId,$scope.currentPlayer.playerInfo.id,"displayName",res.data.displayName)),$mdDialog.hide()}"failed"==res.status&&"PROBLEM_CHANGING_DISPLAY_NAME"==res.message&&alert("Problem in changing display name, Please try again later")})}else $state.go("signin",{})}}]),angular.module("table99.controllers").controller("avatarDialogCtrl",["$rootScope","$scope","$state","$localStorage","soundService","userService","$mdDialog","Upload","BASE_URL","caller",function($rootScope,$scope,$state,$localStorage,soundService,userService,$mdDialog,Upload,BASE_URL,caller){$scope.up={},$scope.uploadingStart=!1,$scope.addUserAvatar=function(){soundService.buttonClick(),$scope.addAvatar=!1},$scope.uploadAvatar=function(){$scope.up.file&&Upload.upload({url:"/user/uploadAvatar",data:{file:$scope.up.file,temp:"temp"}}).then(function(resp){if($scope.uploadingStart=!1,"success"==resp.data.status){var avatar="background: url("+BASE_URL+"avatars/getAvatar/?r="+resp.data.filename+") no-repeat;",userId=$scope.user.id;userService.updateAvatar({id:userId,avatar:avatar}).success(function(res){if("success"==res.status){if($localStorage.USER){var localStorageData=$localStorage.USER;localStorageData.avatar=res.data.avatar,$localStorage.USER=localStorageData}$scope.user.avatar=res.data.avatar,$scope.addAvatar=!0,"game"==caller&&($scope.currentPlayer.playerInfo.avatar=res.data.avatar,$scope.updatePlayerOnServer($scope.tableId,$scope.currentPlayer.playerInfo.id,"avatar",res.data.avatar)),$mdDialog.hide()}"failed"==res.status&&"PROBLEM_CHANGING_AVATAR"==res.message&&alert("Problem in changing avatar, Please try again later")})}else alert("Error uploading avatar, Please try again later")},function(resp){alert("Error uploading avatar, Please try again later")},function(evt){$scope.uploadingStart=!0;var progressPercentage=parseInt(100*evt.loaded/evt.total);$scope.up.progress=progressPercentage+"% "})},$scope.changeAvatar=function(object){if(soundService.buttonClick(),$scope.user){var userId=$scope.user.id,avatar=object.target.attributes.style.value;userService.updateAvatar({id:userId,avatar:avatar}).success(function(res){if("success"==res.status){if($localStorage.USER){var localStorageData=$localStorage.USER;localStorageData.avatar=res.data.avatar,$localStorage.USER=localStorageData}$scope.user.avatar=res.data.avatar,"game"==caller&&($scope.currentPlayer.playerInfo.avatar=res.data.avatar,$scope.updatePlayerOnServer($scope.tableId,$scope.currentPlayer.playerInfo.id,"avatar",res.data.avatar)),$mdDialog.hide()}"failed"==res.status&&"PROBLEM_CHANGING_AVATAR"==res.message&&alert("Problem in changing avatar, Please try again later")})}else $state.go("signin",{})}}]),angular.module("table99.controllers").controller("backgroundDialogCtrl",["$rootScope","$scope","$state","$localStorage","soundService","$mdDialog",function($rootScope,$scope,$state,$localStorage,soundService,$mdDialog){$scope.slickConfig={variableWidth:!0,slidesToScroll:1,enabled:!0,dots:!1},$scope.changeBackground=function(object){var styleObj={background:object.target.attributes.image.value};$localStorage.BACKGROUND=$rootScope.background=$scope.background=styleObj,$mdDialog.cancel()}}]),angular.module("table99.controllers").controller("shopDialogCtrl",["$rootScope","$localStorage","$scope","userService","$state","layoutService","soundService","$mdDialog","caller",function($rootScope,$localStorage,$scope,userService,$state,layoutService,soundService,$mdDialog,caller){$scope.shopItems=[{debit_amount:50,credit_amount:500},{debit_amount:100,credit_amount:1e3},{debit_amount:200,credit_amount:2e3}],$scope.user.chips=$scope.user.chips?$scope.user.chips:"0",$scope.slickConfig={variableWidth:!0,slidesToScroll:1,enabled:!0,dots:!1,method:{},event:{beforeChange:function(event,slick,currentSlide,nextSlide){},afterChange:function(event,slick,currentSlide,nextSlide){}}},$scope.boughtShopItem=function(item){if(soundService.buttonClick(),$scope.user){var userId=$scope.user.id,chips=$scope.user.chips+item.credit_amount-item.debit_amount;userService.updateBalance({id:userId,chips:chips}).success(function(res){if("success"==res.status){if($localStorage.USER){var localStorageData=$localStorage.USER;localStorageData.chips=res.data.chips,$localStorage.USER=localStorageData}$scope.user.chips=res.data.chips,"game"==caller&&($scope.currentPlayer.playerInfo.chips=res.data.chips,$scope.updatePlayerOnServer($scope.tableId,$scope.currentPlayer.playerInfo.id,"chips",res.data.chips)),$mdDialog.hide()}"failed"==res.status&&"PROBLEM_UPDATING_BALANCE"==res.message&&alert("Problem in updating balance, Please try again later")})}else $state.go("signin",{})}}]),angular.module("table99.controllers").controller("shareCtrl",["$rootScope","$scope","$state","$localStorage","soundService","$mdDialog","$timeout","tableService","userService","SOURCE","DESTINATION","USER","TABLE_ID",function($rootScope,$scope,$state,$localStorage,soundService,$mdDialog,$timeout,tableService,userService,SOURCE,DESTINATION,USER,TABLE_ID){function loadGifts(){tableService.loadGifts().success(function(res){"success"==res.status&&($scope.gifts=res.data),"failed"==res.status&&"PROBLEM_FETCHING_CHAT"==res.message&&alert("Problem in fetching gifts, Please try after sometime")})}$scope.gifts=[];loadGifts(),$scope.send=function(gift){$mdDialog.hide(),USER.chips-=gift.price,userService.updateBalance({id:USER.id,chips:USER.chips}).success(function(res){"success"==res.status&&($scope.$parent.currentPlayer.playerInfo.chips=USER.chips,$scope.$parent.updatePlayerOnServer($scope.$parent.tableId,$scope.$parent.currentPlayer.playerInfo.id,"chips",USER.chips),$scope.$parent.sendGift({from:SOURCE,to:DESTINATION,image:gift.image,tableId:$scope.$parent.tableId
})),"failed"==res.status&&"PROBLEM_FETCHING_CHAT"==res.message&&alert("Problem in fetching gifts, Please try after sometime")})}}]);